sudo: required

services:
  - docker

# indica lo que hay que hacer antes de la instalacion, en este caso se hacen pruebas en travis
before_install:
  # utiliza el archivo Dockerfile.dev para hacer purebas antes de instalar la aplicacion con Dockerfile
  - docker build -t jrtellado/react-test -f ./client/Dockerfile.dev ./client

script:
  # se indican los scripts que se ejecutaran en la imagen creada para las pruebas
  # se sobreescribe el comando nmp test haciendo que termine el proceso una vez hecho las pruebas
  - docker run -e CI=true jrtellado/react-test npm test

# indica lo que hay que hacer si las pruebas se han realizado con exito. Aqui comienza el proceso de produccion
after_success:
  # se construyen los contenedores de cada parte de la aplicacion
  - docker build -t jrtellado/multi-client ./client
  - docker build -t jrtellado/multi-nginx ./nginx
  - docker build -t jrtellado/multi-server ./server
  - docker build -t jrtellado/multi-worker ./worker
  # login en la consola docker utilizando unas variables de entorno que se crean en travis
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # toma estas imagenes y las empuja a dockerhub o github
  - docker push jrtellado/multi-client
  - docker push jrtellado/multi-nginx
  - docker push jrtellado/multi-server
  - docker push jrtellado/multi-worker

deploy:
  provider: elasticbeanstalk
  region: us-east-2
  app: mullti-docker
  env: Mulltidocker-env
  bucket_name: elasticbeanstalk-us-east-2-069683106478
  bucket_path: docker-multi
  on:
    branch: master
  access_key_id:
    secure: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY



